{"version":3,"file":"js/566.6d32bf5a.js","mappings":"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","sources":["webpack://vue-cloud/./src/views/search/SearchChildren/SearchSong.vue","webpack://vue-cloud/src/views/search/SearchChildren/SearchSong.vue","webpack://vue-cloud/./src/views/search/SearchChildren/SearchSong.vue?5a56","webpack://vue-cloud/./src/views/search/SearchChildren/SearchSong.vue?7b07"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"SearchSong\"},[_c('div',{staticClass:\"tip\"},[_vm._v(\"找到\"+_vm._s(_vm.songCount)+\"首单曲\")]),(_vm.multiMatch.artist)?_c('div',{staticClass:\"multiMatch\"},[_c('div',{staticClass:\"matchTitle\"},[_vm._v(\"最佳匹配\")]),_c('div',{staticClass:\"matchContent\"},_vm._l((_vm.multiMatch.artist),function(item,index){return _c('div',{key:index,staticClass:\"matchResult\"},[_c('div',{staticClass:\"matchCover\"},[_c('img',{attrs:{\"src\":item.img1v1Url+'?param==100y100',\"alt\":\"\"}})]),_c('div',{staticClass:\"matchName\"},[_vm._v(\"歌手：\"+_vm._s(item.name))]),_c('i',{staticClass:\"iconfont icon-arrow-right-bold\"})])}),0)]):_vm._e(),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.searchSongList,\"size\":\"medium\",\"highlight-current-row\":\"\",\"stripe\":\"\"},on:{\"row-dblclick\":_vm.clickRow,\"cell-click\":_vm.clickCell}},[_c('el-table-column',{attrs:{\"label\":\"\",\"width\":\"30\",\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"\",\"width\":\"23\"}},[_c('i',{staticClass:\"iconfont icon-download\"})]),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"音乐标题\",\"min-width\":\"200\"}}),_c('el-table-column',{attrs:{\"prop\":\"ar[0].name\",\"label\":\"歌手\",\"min-width\":\"100\"}}),_c('el-table-column',{attrs:{\"prop\":\"al.name\",\"label\":\"专辑\",\"min-width\":\"170\"}}),_c('el-table-column',{attrs:{\"prop\":\"dt\",\"label\":\"时长\",\"min-width\":\"60\"}})],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"SearchSong\">\r\n    <!-- 搜索结果 -->\r\n    <div class=\"tip\">找到{{ songCount }}首单曲</div>\r\n    <!-- 最佳匹配 有最佳匹配而且是第一页的时候显示-->\r\n    <div class=\"multiMatch\" v-if=\"multiMatch.artist\">\r\n      <!-- title -->\r\n      <div class=\"matchTitle\">最佳匹配</div>\r\n      <!-- 内容 -->\r\n      <div class=\"matchContent\">\r\n        <!-- 图片 info -->\r\n        <div class=\"matchResult\" v-for=\"(item,index) in multiMatch.artist\" :key=\"index\">\r\n          <div class=\"matchCover\">\r\n            <img :src=\"item.img1v1Url+'?param==100y100'\" alt />\r\n          </div>\r\n          <div class=\"matchName\">歌手：{{ item.name }}</div>\r\n          <i class=\"iconfont icon-arrow-right-bold\"></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 歌曲列表 -->\r\n    <el-table\r\n      :data=\"searchSongList\"\r\n      size=\"medium\"\r\n      style=\"width: 100%\"\r\n      @row-dblclick=\"clickRow\"\r\n      @cell-click=\"clickCell\"\r\n      highlight-current-row\r\n      stripe\r\n    >\r\n      <el-table-column label width=\"30\" type=\"index\"></el-table-column>\r\n      <el-table-column label width=\"23\">\r\n        <i class=\"iconfont icon-download\"></i>\r\n      </el-table-column>\r\n      <el-table-column prop=\"name\" label=\"音乐标题\" min-width=\"200\"></el-table-column>\r\n      <el-table-column prop=\"ar[0].name\" label=\"歌手\" min-width=\"100\"></el-table-column>\r\n      <el-table-column prop=\"al.name\" label=\"专辑\" min-width=\"170\"></el-table-column>\r\n      <el-table-column prop=\"dt\" label=\"时长\" min-width=\"60\"></el-table-column>\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { handleMusicTime } from \"@/plugins/utils\";\r\nimport { getMultimatch, getSearch } from \"@/API\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      multiMatch: {},\r\n      searchSongList: [],\r\n      songCount: 0\r\n      // currentPage:1,\r\n    };\r\n  },\r\n  created() {\r\n    this.getMultimatch();\r\n    this.getSearch();\r\n  },\r\n  methods: {\r\n    async getMultimatch() {\r\n      const res = await getMultimatch(this.$route.params.keyword);\r\n      this.multiMatch = res.data.result;\r\n    },\r\n    async getSearch() {\r\n      const res = await getSearch(this.$route.params.keyword);\r\n      this.searchSongList = res.data.result.songs;\r\n      this.songCount = res.data.result.songCount;\r\n      this.searchSongList.forEach((item,index)=>{\r\n        this.searchSongList[index].dt = handleMusicTime(item.dt);\r\n      })\r\n      console.log(this.searchSongList);\r\n    },\r\n\r\n    // 处理索引\r\n    handleIndex(index) {\r\n      console.log(index);\r\n      index = index + 1 + 30 * (this.currentPage - 1);\r\n      if (index < 10) {\r\n        return \"0\" + index;\r\n      } else {\r\n        return index;\r\n      }\r\n    },\r\n\r\n    clickCell() {},\r\n    async clickRow(row) {\r\n      // 这里双击应该是要把当前双击的歌曲插入到当前的歌单中\r\n      // 首先获取当前的歌单列表和歌曲索引\r\n      let musicList = this.$store.state.musicList;\r\n      let currentIndex = this.$store.state.currentIndex;\r\n      // 先判断该歌曲是否已经在歌单中存在，避免重复点击导致歌单出现相同歌曲\r\n      let isExist = musicList.find(item => item.id == row.id);\r\n      if (isExist) {\r\n        // 如果已经存在 则只提交歌曲id并return出去\r\n        this.$store.commit(\"updataMusicId\", row.id);\r\n        return;\r\n      }\r\n      this.$store.commit(\"updataPlayState\", false);\r\n      // 将请求到的歌曲详情插入到歌单对应位置并提交至vuex\r\n      musicList.splice(currentIndex + 1, 0, row);\r\n      this.$store.commit(\"updataMusicId\", row.id);\r\n      this.$store.commit(\"updataMusicList\", {\r\n        musicList,\r\n        musicListId: this.$store.state.musicListId\r\n      });\r\n    }\r\n  },\r\n  watch: {\r\n    $route() {\r\n      this.getMultimatch();\r\n      this.getSearch();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.SearchSong {\r\n  padding: 0 15px;\r\n  .tip {\r\n    font-weight: bold;\r\n    color: rgb(34, 34, 34);\r\n    margin-bottom: 10px;\r\n  }\r\n  .multiMatch {\r\n    width: 100%;\r\n    .matchTitle {\r\n      font-size: 16px;\r\n      color: rgb(34, 34, 34);\r\n      margin: 5px 0;\r\n    }\r\n    .matchContent {\r\n      display: flex;\r\n      .matchResult {\r\n        position: relative;\r\n        width: 300px;\r\n        display: flex;\r\n        align-items: center;\r\n        margin-right: 50px;\r\n        border-radius: 10px;\r\n        background-color: #e5e5e5;\r\n        overflow: hidden;\r\n        .matchCover {\r\n          width: 80px;\r\n          overflow: hidden;\r\n          img {\r\n            width: 100%;\r\n          }\r\n        }\r\n        .matchName {\r\n          margin-left: 20px;\r\n        }\r\n        i {\r\n          position: absolute;\r\n          transform: translateY(-50%);\r\n          right: 15px;\r\n          top: 50%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>","import mod from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SearchSong.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./SearchSong.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SearchSong.vue?vue&type=template&id=61ca8ade&scoped=true&\"\nimport script from \"./SearchSong.vue?vue&type=script&lang=js&\"\nexport * from \"./SearchSong.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SearchSong.vue?vue&type=style&index=0&id=61ca8ade&prod&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"61ca8ade\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","_s","songCount","multiMatch","artist","_l","item","index","key","attrs","img1v1Url","name","_e","staticStyle","searchSongList","on","clickRow","clickCell","staticRenderFns","data","created","getMultimatch","getSearch","methods","res","$route","params","keyword","result","songs","forEach","dt","handleMusicTime","console","log","handleIndex","currentPage","row","musicList","$store","state","currentIndex","isExist","find","id","commit","splice","musicListId","watch","component"],"sourceRoot":""}